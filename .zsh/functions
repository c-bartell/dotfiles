###############
## FUNCTIONS ##
###############

# Use local .nvmrc settings on entry into repo
unalias cd > /dev/null 2>&1
function cdEnhanced() {
	cd ${1:-${HOME}};
	useNvmrc;
}

function useNvmrc() {
  if [ -f .nvmrc ]; then
    nvm use;
  fi
}

# Kill a port
function killport() {
    port=$(lsof -n -i4TCP:$1 | grep LISTEN | awk '{ print $2 }')
    kill -9 $port
}

function getuid() {
    uuidgen \
        | tr '[:upper:]' '[:lower:]' \
        | tr -d '\n' | pbcopy
}

function statusCat() {
	status_code=$1
	url="https://http.cat/$status_code"
	open $url
}

function statusDog() {
	status_code=$1
	url="https://httpstatusdogs.com/$status_code"
	open $url
}

function weather() {
	url="wttr.in/$1"
	# url="v2/wttr.in/$1"

	curl $url
}

function cheat() {
	url="cheat.sh/$1"
	curl $url
	# curl $url | less -Rg
}

function printRandomValue() {
	IBOTTA='\033[48;2;232;70;120;38;2;255;255;255;1m'
	CLEAR='\033[0m'

	array=(
			"                    INTEGRITY                     "
			"                     BOLDNESS                     "
			"                    OUTHUSTLE                     "
			"                     TEAMWORK                     "
			"                   TRANSPARENCY                   "
			"                  A GOOD IDEA...                  "
	)

	size=${#array[@]}
	index=$(($RANDOM % $#array[@] + 1)) # zsh
	# index=$(($RANDOM % $#array[@])) # bash
	echo -e "${IBOTTA}${array[$index]}${CLEAR}"
}

function dotRepo() {
	git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@
}

# Wrap function calls and play alert sounds on completion
function alert() {
  eval $@

  if [ $? -eq 0 ]; then
    echo "Success!"
    afplay "$HOME/sounds/CAW.mp3"
  else
    echo "ðŸš¨Failure!!!ðŸš¨"
    afplay "$HOME/sounds/klaxon.mp3"
  fi
}

# Handy function for testing script fail paths
function fail() {
  return 1
}
